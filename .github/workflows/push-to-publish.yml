name: Electron publish!

on:
  # Sequence of patterns matched against refs/heads
  push:
    branches:    
      - master         # Push events on master branch
    paths:
      - 'dist/**/*'               # match this pattern
      - 'electron-builder.js'     # match this pattern
      - '.github/workflows/*.yml' # or match this pattern
      - '!*.md'                   # but not match this
      - '!**/__fixtures__/**'     # and not match this
      - '!**/__tests__/**'        # and not match this

jobs:
  build:
    name: Publish
    runs-on: ubuntu-latest
    # ## functions
    # - https://help.github.com/en/actions/automating-your-workflow-with-github-actions/contexts-and-expression-syntax-for-github-actions#functions
    # - https://help.github.com/en/actions/automating-your-workflow-with-github-actions/contexts-and-expression-syntax-for-github-actions#contains
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"
    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2 # https://github.com/actions/checkout
      with:
        fetch-depth: 0
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/* # https://github.com/actions/checkout#Fetch-all-tags

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1 # https://github.com/actions/setup-node
      with:
        node-version: ${{ matrix.node-version }}
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    # step "yarn-cache" just restore `cache dir` of yarn & not "node_modules" dirs
    # - name: Install Dependencies
    #   if: steps.yarn-cache.outputs.cache-hit != 'true'
    #   run: /install.sh

    - name: yarn install, build, and test
      run: |
        yarn install --frozen-lockfile
        make prepare
        # yarn run build --if-present
        # yarn test
      # env:
      #   CI: true

    # https://github.com/semantic-release/npm/blob/1f3ab84a5d05947960be9a7c78642e13fb516496/lib/set-npmrc-auth.js
    - name: Set NPM AuthToken
      run: |
        echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ~/.npmrc
      env:
        NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    - name: Setup git
      run: |
        sed -i -E 's|https://github.com/([[:alnum:]_-]+/[[:alnum:]_-]+)|git@github.com:\1.git|' .git/config
        git config --global user.email "$EMAIL"
        git config --global user.name "Github Action"
        git checkout master
        git branch -m master
      env:
        EMAIL: ${{ secrets.EMAIL }}
    - name: lerna publish
      run: |
        make publish.force
      # yarn --silent lerna changed
      env: # https://help.github.com/en/articles/workflow-syntax-for-github-actions#jobsjob_idstepsenv
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
